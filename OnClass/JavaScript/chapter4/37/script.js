// numと言う変数宣言を行い、1を代入している。
// var num = 1
// 先ほど作成したnumへ2を再代入している。
// num = 2
// 先ほど作成したnumとは別のnumを変数として作成し、3を代入している。(再宣言)
// var num = 3

// numと言う変数宣言を行い、1を代入している。
// let num = 1
// 先ほど作成したnumへ2を再代入している。
// num = 2
// 先ほど作成したnumが既に存在しているのでエラーを起こす。
// var num = 3

// numと言う変数宣言を行い、1を代入している。
// const num = 1
// 再代入できないのでエラーが起きる。
// num = 2
// 先ほど作成したnumが既に存在しているのでエラーを起こす。
// var num = 3

// 1.
// var  :変数の再代入、再宣言が可能。
// let  :変数の再代入は可能だが、再宣言は不可。
// const:変数の再代入、再宣言が不可。

// 2.
// varは再宣言、再代入ができてしまうのでグローバルな変数になりやすい。

// 用意に再代入、再宣言ができてしまうのでvarで宣言した変数に対して
// 何が入って来るか分からなくなってしまいバグの温床になってしまう。


// 3.
// 一度定義した名前（変数名）が常に同じ値を示すもの。
// JavaScriptでも、 const 宣言によって定数に近い変数を定義可能。