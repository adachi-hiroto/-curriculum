// 条件分岐や繰り返し処理

// ＠ifを使って条件分岐を作る
$floatValue: true;
@if $floatValue {
    .is-float {
        float: left;
    }
}
@else {
    .is-float {
        float: right;
    }
}

// ⽐較条件を追加した例
.bg-color{
    width: 100px;
    height: 100px;
}
$bgColor: 1;
@if $bgColor == 0 {
    .bg-color {
        background-color: red;
    }
}
@else if $bgColor == 1 {
    .bg-color {
        background-color: blue;
    }
}
@else {
    .bg-color {
        background-color: green;
    }
}

// @forを使って繰り返し処理をする
// through
.through-sample{
    width: 100px;
    height: 100px;
    background-color: blue;
}
@for $value from 1 through 3 {
    .through-sample-#{$value * 10} {
        margin: 10px * $value;
    }
}
// to
.to-sample{
    width: 100px;
    height: 100px;
    background-color: green;
}
@for $value from 1 to 3 {
    .to-sample-#{$value * 10} {
        margin: 10px * $value;
    }
}

// @whileを使って繰り返し処理をする
$value: 20;
@while $value > 0 {
    .while-sample-#{$value} {
        margin: $value + px;
    }
    $value: $value - 10;
}

// @eachを使ってリスト（配列）の要素に対して繰り返し処理をする
// // 配列
// $bgColor:#acc1ed,#dc7668,#71d0f2;
// // オブジェクト
// $map: (
//     "header": #acc1ed,
//     "main": #dc7668,
//     "footer": #71d0f2,
// );

$bgColor:#acc1ed,#dc7668,#71d0f2;
@each $value in $bgColor {
    .bg-color {
        background: $value;
    }
}

$map: (
    "header": #acc1ed,
    "main": #dc7668,
    "footer": #71d0f2,
);
@each $key, $value in $map {
    .#{$key}-bg-color {
        background: $value;
    }
}

// 課題
// 1.. ifの処理を@mixinの中で⾏い、対象のクラスの中で展開し、ifの条件で通ったCSSのプロパティーを反映させてください
@mixin boxContent($value: false){
    width: 200px;
    height: 400px;
    margin: 0 auto;
    @if $value{
        background-color: red;
    } 
    @else{
        background-color: blue;
    }
}

.main-box{
    @include boxContent
}
.sub-box{
    @include boxContent(true)
}
